version: '3'
services:
  redis:
    image: 'redis:latest'
    networks:
      - default
  mysql:
    image: 'mysql:latest'
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=gofib
      - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=password
    restart: always
    ports:
      - '3300:3306'
    expose: ["3306"]
    volumes:
      - ./db_worker/init:/docker-entrypoint-initdb.d/:ro
    networks:
      - default
  db_worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./db_worker
    environment:
      - MYSQL_DB=gofib
      - MYSQL_PW=password
      - MYSQL_USER=root
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - mysql
    networks:
      - default
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    ports:
      - '80:3100'
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - datadog-agent
    networks:
      - default
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    ports:
      - '3000:3000'
    volumes:
      - /app/node_modules
      - ./client:/app
    networks:
      - default
  datadog-agent:
    image: 'datadog/agent:latest'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_AC_EXCLUDE=name:datadog-agent
    ports:
      - '127.0.0.1:8126:8126/tcp'
    networks:
      - default
networks:
  default:
    driver: bridge
